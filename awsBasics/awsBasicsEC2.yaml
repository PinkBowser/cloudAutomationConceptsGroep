Description: Template for EC2 instance with Cloudshirt
Parameters:
  RDSENDPOINT:
    Type: String
    Description: The RDS endpoint for the database.
    Default: !ImportValue CloudShirtDB:DBEndpoint

Resources:
  CloudShirtEC2Instance:
    Type: AWS::EC2::Instance
    Properties:
        BlockDeviceMappings: 
        - DeviceName: /dev/xvda
          Ebs:
            DeleteOnTermination: true 
            VolumeType: gp3
            VolumeSize: 30
            Encrypted: "true" 
        InstanceType: t2.micro 
        ImageId: ami-0ebfd941bbafe70c6 #Needs to be AMI 2023
        KeyName: vockey 
        SecurityGroupIds: 
          - !ImportValue  CloudShirt:SecurityGroupId 
        SubnetId: !ImportValue CloudShirt:PublicSubnet1 # Deploy the instance in the public subnet in AZ.
        Tags:
          - Key: Name
            Value: cloudshirt-instance
        UserData: 
          Fn::Base64: 
            !Sub |
              #!/bin/bash
              # Update en installeer benodigde pakketten
              sudo yum update -y
              sudo yum upgrade -y

              # Installeer git en .NET 6.0 runtime en SDK
              sudo yum install -y git
              sudo yum install -y aspnetcore-runtime-6.0
              sudo yum install -y dotnet-sdk-6.0

              # Update specifieke dotnet versie met dnf
              sudo dnf update dotnet6.0 --releasever=2023.1.20230719 -y

              # Clone de repository en bouw de applicatie
              cd /root
              sudo git clone https://github.com/looking4ward/CloudShirt.git
              sed -i 's/Server.*CatalogDb;/Server=${RDSENDPOINT},1433;UserID=csadmin;Password=cspasswd;InitialCatalog=Microsoft.eShopOnWeb.CatalogDb;/' /root/CloudShirt/src/Web/appsettings.json
              sed -i 's/Server.*Identity;/Server=${RDSENDPOINT},1433;UserID=csadmin;Password=cspasswd;InitialCatalog=Microsoft.eShopOnWeb.Identity;/' /root/CloudShirt/src/Web/appsettings.json

              cd CloudShirt/src/Web

              # Publiceer de dotnet applicatie
              sudo dotnet publish -c Release -o ../../../release

              # Navigeer naar de release map en start de applicatie
              cd ../../../release
              sudo dotnet Web.dll

Outputs:
  EC2InstanceId:
    Description: "The Instance ID of the EC2 instance"
    Value: !Ref CloudShirtEC2Instance
    Export:
      Name: !Join [ ":", [ !Ref "AWS::StackName", EC2InstanceId ] ] # Fancy way of making the exported variable called "MyBase:Var"
